{"version":3,"sources":["hooks/useFileReader.js","components/Flashcard.jsx","components/Pagination.jsx","components/ProgressBar.jsx","components/Display.jsx","components/Dropzone.jsx","App.js","index.js"],"names":["useFileReader","method","useState","file","setFile","error","setError","result","setResult","useEffect","reader","FileReader","onerror","e","target","onload","getRelativePosition","ref","rect","current","getBoundingClientRect","x","clientX","y","clientY","Flashcard","term","definition","revealed","setRevealed","cursor","setCursor","divs","useRef","onMouseDown","onMouseUp","x1","y1","x0","y0","Math","pow","prevRevealed","addEventListener","removeEventListener","styles","map","div","scrollHeight","clientHeight","isOverflownY","alignItems","className","style","transform","Pagination","index","setIndex","length","onClick","prevIndex","disabled","size","color","ProgressBar","progress","width","svStyles","root","background","border","minHeight","height","container","Display","data","onKeyDown","key","max","min","document","containerStyle","onChangeIndex","enableMouseEvents","i","Dropzone","onDrop","count","useDropzone","files","forEach","getRootProps","getInputProps","isDragActive","isDragAccept","isDragReject","JSON","parse","Array","isArray","filter","item","def","Number","isInteger","App","setData","prevData","nextData","arr","j","floor","random","shuffle","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.55a12d91.chunk.js","sourcesContent":["/*\n * Modified from @jcblw/react-use-file-reader\n */\n\nimport React, { useEffect, useState } from \"react\";\n\nfunction useFileReader(method = \"readAsText\") {\n\n  const [file, setFile] = useState(null);\n  const [error, setError] = useState(null);\n  const [result, setResult] = useState(null);\n\n  useEffect(() => {\n    if (file === null) {\n      return;\n    }\n    const reader = new FileReader(file);\n\n    reader.onerror = e => {\n      setError(e.target.error);\n    };\n    reader.onload = e => {\n      setResult(e.target.result);\n    };\n\n    try {\n      // We need to reset the result state variable, otherwise if we load a file,\n      // discard it, then try to load it again, we get the exact same string and\n      // miss the rerender.\n      setResult(null);\n      reader[method](file);\n    } catch (e) {\n      setError(e);\n    }\n  }, [file]);\n\n  return [\n    {\n      error,\n      file,\n      result,\n    },\n    setFile,\n  ];\n}\n\nexport default useFileReader;\n","import React, { useEffect, useRef, useState } from \"react\";\n\nimport \"./Flashcard.scss\";\n\nfunction isOverflownY({ current }) {\n  if (!current) {\n    return false;\n  }\n  return current.scrollHeight > current.clientHeight;\n}\n\nfunction getRelativePosition(ref, e) {\n  const rect = ref.current.getBoundingClientRect();\n  const x = e.clientX - rect.x;\n  const y = e.clientY - rect.y;\n  return { x, y };\n}\n\nfunction Flashcard({ term, definition }) {\n  const [revealed, setRevealed] = useState(false);\n  const [cursor, setCursor] = useState(null);\n  const divs = [useRef(null), useRef(null)];\n  const ref = useRef(null);\n\n  useEffect(() => {\n    function onMouseDown(e) {\n      setCursor(getRelativePosition(ref, e));\n    }\n    function onMouseUp(e) {\n      if (cursor === null) {\n        return;\n      }\n      const { x: x1, y: y1 } = getRelativePosition(ref, e);\n      const { x: x0, y: y0 } = cursor;\n      const distSquared = Math.pow(x1-x0, 2) + Math.pow(y1-y0, 2);\n\n      // Only flip the card if the drag distance is less than sqrt(2) pixels.\n      // This prevents the card from flipping when dragging to the next card.\n      if (distSquared <= 2) {\n        setRevealed(prevRevealed => !prevRevealed);\n      }\n      setCursor(null);\n    }\n    // Add the listeners.\n    ref.current.addEventListener(\"mousedown\", onMouseDown);\n    ref.current.addEventListener(\"mouseup\", onMouseUp);\n\n    // Remove the listeners.\n    return () => {\n      if (ref.current !== null) {\n        ref.current.removeEventListener(\"mousedown\", onMouseDown);\n        ref.current.removeEventListener(\"mouseup\", onMouseUp);\n      }\n    };\n  }, [cursor]);\n\n  // Try to determine if the front or back text is overflowing the div. If so, we\n  // can't have align-items: center, otherwise we can't see the top of the text.\n  const styles = divs.map(div => isOverflownY(div) ? {} : { alignItems: \"center\" });\n\n  return (\n    <div\n      ref={ref}\n      className=\"Flashcard\"\n      style={{ transform: `rotateY(${revealed * 180}deg)` }}\n    >\n      <div\n        ref={divs[0]}\n        className=\"front\"\n        style={styles[0]}\n      >\n        <div>{term}</div>\n      </div>\n      <div\n        ref={divs[1]}\n        className=\"back\"\n        style={styles[1]}\n      >\n        <div>{definition}</div>\n      </div>\n    </div>\n  );\n}\n\nexport default Flashcard;\n","import React, { useEffect, useState } from \"react\";\nimport \"./Pagination.scss\";\n\nimport { MdNavigateNext, MdNavigateBefore } from \"react-icons/md\";\n\nfunction Pagination({ index, setIndex, length }) {\n  return (\n    <div className=\"Pagination\">\n      <button\n        onClick={e => setIndex(prevIndex => prevIndex-1)}\n        disabled={index <= 0}\n      >\n        <MdNavigateBefore\n          size=\"25\"\n          color=\"#041027\"\n        />\n      </button>\n      <span>\n        {length ? `${index+1}/${length}` : `0/0`}\n      </span>\n      <button\n        onClick={e => setIndex(prevIndex => prevIndex+1)}\n        disabled={index >= length-1}\n      >\n        <MdNavigateNext\n          size=\"25\"\n          color=\"#041027\"\n        />\n      </button>\n    </div>\n  );\n}\n\nexport default Pagination;\n","import \"./ProgressBar.scss\";\n\nfunction ProgressBar({ progress }) {\n  return (\n    <div className=\"ProgressBar\">\n      <div style={{ width: `${progress * 100}%` }} />\n    </div>\n  );\n}\n\nexport default ProgressBar;\n","import React, { useEffect, useState } from \"react\";\nimport SwipeableViews from \"react-swipeable-views\";\n\nimport Flashcard from \"./Flashcard\";\nimport Pagination from \"./Pagination\";\nimport ProgressBar from \"./ProgressBar\";\nimport \"./Display.scss\";\n\nconst svStyles = {\n  root: {\n    background: \"#fff\",\n    border: \"4px solid #eee\",\n    minHeight: \"300px\",\n    height: \"100%\",\n    width: \"100%\",\n  },\n  container: {\n    height: \"100%\",\n  }\n};\n\nfunction Display({ data }) {\n  const [index, setIndex] = useState(0);\n\n  // Reset the index when the data changes, i.e. is shuffled.\n  useEffect(() => setIndex(0), [data]);\n\n  useEffect(() => {\n    function onKeyDown(e) {\n      if (e.key === \"ArrowLeft\") {\n        setIndex(prevIndex => Math.max(prevIndex-1, 0));\n      } else if (e.key === \"ArrowRight\") {\n        setIndex(prevIndex => {\n          return data.length ? Math.min(prevIndex+1, data.length-1) : 0;\n        });\n      }\n    }\n    document.addEventListener(\"keydown\", onKeyDown);\n\n    return () => {\n      document.removeEventListener(\"keydown\", onKeyDown);\n    };\n  }, [data, index]);\n\n  return (\n    <div className=\"Display\">\n      <div>\n        <ProgressBar\n          progress={index / (data.length-1)}\n        />\n        <SwipeableViews\n          index={index}\n          style={svStyles.root}\n          containerStyle={svStyles.container}\n          onChangeIndex={setIndex}\n          disabled={data.length === 0}\n          enableMouseEvents\n        >\n          {data.map((x, i) => <Flashcard key={i} {...x} />)}\n        </SwipeableViews>\n        <Pagination\n          index={index}\n          setIndex={setIndex}\n          length={data.length}\n        />\n      </div>\n    </div>\n  );\n}\n\nexport default Display;\n","import React, { useEffect, useMemo, useState } from \"react\";\nimport { useDropzone } from \"react-dropzone\";\nimport { RiStackFill } from \"react-icons/ri\";\nimport { BiDownload } from \"react-icons/bi\";\n\nimport useFileReader from \"../hooks/useFileReader\";\nimport \"./Dropzone.scss\";\n\nfunction Dropzone({ onDrop, count }) {\n  const [{ error, file, result }, setFile] = useFileReader();\n\n  const {\n    getRootProps,\n    getInputProps,\n    isDragActive,\n    isDragAccept,\n    isDragReject,\n  } = useDropzone({ onDrop: files => files.forEach(file => setFile(file)) });\n\n  useEffect(() => {\n    if (error === null && result !== null) {\n      var data = JSON.parse(result);\n\n      if (!Array.isArray(data)) {\n        return;\n      }\n      // Discard flashcards that are invalid. TODO: Eliminate for duplicates.\n      data = data.filter(item => {\n        const { term = null, definition: def = null } = item;\n        return ((typeof def === \"string\") || Number.isInteger(def)) &&\n               (typeof term === \"string\");\n      });\n      if (data.length) {\n        onDrop(data);\n      }\n    }\n  }, [error, result]);\n\n  return (\n    <div {...getRootProps({ className: \"Dropzone\" })}>\n      <input {...getInputProps()}/>\n      <span>{count}</span>\n      <RiStackFill size=\"25\" color=\"#041027\" />\n    </div>\n  );\n}\n\nexport default Dropzone;\n","import React, { useCallback, useEffect, useMemo, useState } from \"react\";\nimport { BiX } from \"react-icons/bi\";\nimport { ImShuffle } from \"react-icons/im\";\nimport useFileReader from \"./hooks/useFileReader\";\n\nimport Display from \"./components/Display\";\nimport Dropzone from \"./components/Dropzone\";\nimport \"./App.scss\";\n\nfunction shuffle(arr) {\n  for (var i = arr.length-1; i > 0; i--) {\n    const j = Math.floor(Math.random() * (i+1));\n    [arr[i], arr[j]] = [arr[j], arr[i]];\n  }\n}\n\nfunction App() {\n  const [data, setData] = useState([]);\n\n  return (\n    <div className=\"App\">\n      <div className=\"header\">\n        <span className=\"title\">react-flashcards</span>\n        <span>\n          {/* Dropzone component for accepting JSON flashcard files. */}\n          <Dropzone\n            onDrop={data => setData(prevData => [...prevData, ...data])}\n            count={data.length}\n          />\n          {/* Shuffle button. */}\n          <button\n            onClick={e => {\n              if (data === null) {\n                return;\n              }\n              setData(prevData => {\n                var nextData = [...prevData];\n                shuffle(nextData);\n                return nextData;\n              });\n            }}\n          >\n            <ImShuffle color=\"#041027\" size=\"20\" />\n          </button>\n          {/* \"X\" button to remove all the flashcards. */}\n          <button onClick={e => setData([])} >\n            <BiX color=\"#041027\" size=\"30\" />\n          </button>\n        </span>\n      </div>\n      <Display data={data} />\n    </div>\n  );\n}\n\nexport default App;\n","import ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport \"./index.scss\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}